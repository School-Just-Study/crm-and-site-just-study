# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Validation

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

jobs:
  test-crm:
    name: Build CRM
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: crm

    steps:
      - uses: actions/checkout@v3

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - uses: actions/setup-node@v3
      - run: yarn install --frozen-lockfile
      - run: yarn build

  test-site:
    name: Build Site
    runs-on: ubuntu-latest
    environment:
      name: dev
    defaults:
      run:
        working-directory: site

    steps:
      - uses: actions/checkout@v3

      - name: Create env file
        run: |
          touch .env
          echo FRONTEND_URL=${{ vars.FRONTEND_URL }} >> .env
          echo NEXT_PUBLIC_FRONTEND_URL=${{ vars.FRONTEND_URL }} >> .env
          cat .env

      - uses: actions/setup-node@v3
        with:
          cache: yarn
          node-version: 18
          cache-dependency-path: '**/yarn.lock'
      - run: yarn install --frozen-lockfile
      - run: yarn build:dev
