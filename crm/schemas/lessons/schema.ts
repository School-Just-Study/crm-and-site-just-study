import { list } from '@keystone-6/core';
import { checkbox, relationship, select, text, timestamp } from '@keystone-6/core/fields';
import { createdAt } from '../../fields/createdAt';
import { lastModification } from '../../fields/lastModification';
import { fields } from './fields';
import {
    handleCheckBookingLesson,
    handleNotificationStudentAndTeacherLesson,
    handleSetSubscriptionIfEmpty
} from './hooks';
import { timezoneOptionsConst } from '../../consts/timezone-options.const';
import { createOnlyAdminForUi, EditOnlyAdminForUi } from '../../validation';
import { allowAll } from '@keystone-6/core/access';

export const Lesson = list({
    ui: {
        label: 'üìö–£—Ä–æ–∫–∏',
        listView: {
            initialColumns: ['id', 'students', 'statusLesson', 'startTime', 'endTime', 'trial', 'timeZone'],
            initialSort: { field: 'statusLesson', direction: 'DESC' }
        }
    },
    fields: {
        statusLesson: fields,
        title: text({ label: '–ó–∞–≥–æ–ª–æ–≤–æ–∫' }),
        description: text({ label: '–û–ø–∏—Å–∞–Ω–∏–µ' }),
        startTime: timestamp({
            validation: { isRequired: true },
            label: '–ù–∞—á–∞–ª–æ —É—Ä–æ–∫–∞'
        }),
        endTime: timestamp({
            validation: { isRequired: true },
            label: '–û–∫–æ–Ω—á–∞–Ω–∏–µ —É—Ä–æ–∫–∞'
        }),
        trial: checkbox({
            label: '–ü—Ä–æ–±–Ω—ã–π —É—Ä–æ–∫',
            defaultValue: false
        }),
        burned: checkbox({
            label: '–£—Ä–æ–∫ —Å–≥–æ—Ä–µ–ª',
            defaultValue: false
        }),
        students: relationship({ ref: 'User', many: true, label: '–ö–ª–∏–µ–Ω—Ç' }),
        subscription: relationship({
            ref: 'UserSubscription.lessons',
            label: '–ê–±–æ–Ω–µ–º–µ–Ω—Ç',
            ui: {
                description: '–ù–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É–∫–∞–∑—ã–≤–∞—Ç—å, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∞–±–æ–Ω–µ–º–µ–Ω—Ç–∞'
            }
        }),
        teachers: relationship({ ref: 'Manager', many: true, label: '–£—á–∏—Ç–µ–ª—è' }),
        comment: text({
            ui: { displayMode: 'textarea' },
            db: { nativeType: 'VarChar(10000)' },
            label: '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π'
        }),
        timeZone: select({
            options: timezoneOptionsConst,
            type: 'string',
            validation: { isRequired: true },
            defaultValue: 'Europe/Moscow',
            label: '–î–õ–Ø –£–í–ï–î–û–ú–õ–ï–ù–ò–Ø –í –ü–ò–°–¨–ú–ï –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å',
            ui: {
                itemView: { fieldMode: EditOnlyAdminForUi },
                createView: { fieldMode: createOnlyAdminForUi }
            }
        }),
        notified: checkbox({
            label: '–î–û–°–¢–ê–í–õ–ï–ù–û —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ —É—Ä–æ–∫–∞',
            ui: {
                itemView: { fieldMode: EditOnlyAdminForUi },
                createView: { fieldMode: createOnlyAdminForUi }
            }
        }),
        notAlert: checkbox({
            label: '–°–æ–∑–¥–∞–Ω–æ –∏–∑ –≥—Ä–∞—Ñ–∏–∫–∞',
            ui: {
                itemView: { fieldMode: EditOnlyAdminForUi },
                createView: { fieldMode: createOnlyAdminForUi }
            }
        }),
        createdAt,
        lastModification
    },
    hooks: {
        resolveInput: handleSetSubscriptionIfEmpty,
        validateInput: handleCheckBookingLesson,
        afterOperation: handleNotificationStudentAndTeacherLesson
    },
    access: allowAll
});
